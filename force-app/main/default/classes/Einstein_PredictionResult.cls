/* ---------------------------------------------------------------------------------------------------------------------------
 * Name:       Einstein_PredictionResult
 * Description:  Makes an API call to the Intent API and fetches the predictions according to the title and description.
 * ---------------------------------------------------------------------------------------------------------------------------
 * Date         Version          Author             Summary of Changes 
 * -----------  -------  ------------------------  ---------------------------------------------------------------------------
 * 01/03/2018     1.0    Jorge Montalv√£o           Defect 6023261: [QE]FY20_0202_Lightning_Intelligence_CC List and NBA field is blank for cases created for the mentioned performance labels in SIT1
 * 10/01/2019     1.0    Rodrigo Muniz             [QE]FY20_0202_Lightning_Intelligence_Error Message displayed on the Platform playground page and Component Error on the Platform Prediction page in SIT1
 * --------------------------------------------------------------------------------------------------------------------------- */

//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
// Run Einstein_PredictionResult_Test for code coverage
//

public class Einstein_PredictionResult {

	@AuraEnabled
	public List<Probabilities> probabilities {get;set;} 
	@AuraEnabled
	public String object_type {get;set;} // in json: object
	@AuraEnabled
	public String message {get;set;} 

	public Einstein_PredictionResult(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'probabilities') {
						probabilities = arrayOfProbabilities(parser);
					} else if (text == 'object') {
						object_type = parser.getText();
					} else if (text == 'message') {
						message = parser.getText();
					} else {
						System.debug(LoggingLevel.WARN, 'Einstein_PredictionResult consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Probabilities {
		@AuraEnabled
		public String label {get;set;} 
		@AuraEnabled
		public Double probability {get;set;} 

		public Probabilities(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'label') {
							label = parser.getText();
						} else if (text == 'probability') {
							probability = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Probabilities consuming unrecognized property: ' + text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static Einstein_PredictionResult parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new Einstein_PredictionResult(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<Probabilities> arrayOfProbabilities(System.JSONParser p) {
        List<Probabilities> res = new List<Probabilities>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Probabilities(p));
        }
        return res;
    }
}