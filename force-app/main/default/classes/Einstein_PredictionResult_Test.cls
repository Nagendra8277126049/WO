/* ---------------------------------------------------------------------------------------------------------------------------
 * Name:       CaseClassificationProcessBuilder
 * Description:  Makes an API call to the Intent API and fetches the predictions according to the title and description.
 * ---------------------------------------------------------------------------------------------------------------------------
 * Date         Version          Author             Summary of Changes 
 * -----------  -------  ------------------------  ---------------------------------------------------------------------------
 * 01/03/2018     1.0    Jorge Montalv√£o           Defect 6023261: [QE]FY20_0202_Lightning_Intelligence_CC List and NBA field is blank for cases created for the mentioned performance labels in SIT1
 * -------------------------------------------------------------------------------------------------------------------------- */


//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

@IsTest
public class Einstein_PredictionResult_Test {
	
	// This test method should give 100% coverage
	static testMethod void testParse() {
		String json = '{\"probabilities\":[{\"label\":\"Slow performance with 100% Hard Drive activity using Windows 8 /8.1/10\",\"probability\":0.8990304},{\"label\":\"System freezing/locking up\",\"probability\":0.060056917},{\"label\":\"Slow system performance when docked(notebooks only)\",\"probability\":0.014812006}],\"object\":\"predictresponse\", \"message\": \"{\\\"sampleId\\\":\\\"bitlocker encryption\\\",\\\"message\\\":\\\"Bad Request: Missing document\\\"}\"}';
		Einstein_PredictionResult r = Einstein_PredictionResult.parse(json);
		System.assert(r != null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		Einstein_PredictionResult objEinstein_PredictionResult = new Einstein_PredictionResult(System.JSON.createParser(json));
		System.assert(objEinstein_PredictionResult != null);
		System.assert(objEinstein_PredictionResult.probabilities == null);
		System.assert(objEinstein_PredictionResult.object_Type == null);
		System.assert(objEinstein_PredictionResult.message == null);

		json = '{\"TestAMissingObject\": { \"TestAMissingArray\": [ { \"TestAMissingProperty\": \"Some Value\" } ] } }';
		Einstein_PredictionResult.Probabilities objProbabilities = new Einstein_PredictionResult.Probabilities(System.JSON.createParser(json));
		System.assert(objProbabilities != null);
		System.assert(objProbabilities.label == null);
		System.assert(objProbabilities.probability == null);
	}
}