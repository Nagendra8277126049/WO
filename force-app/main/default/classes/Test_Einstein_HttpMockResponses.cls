@isTest
public with sharing class Test_Einstein_HttpMockResponses implements HttpCalloutMock {

    public Boolean forceHttpError = false;
    
    public HTTPResponse respond(HTTPRequest req) {

        String apiEndpoint = 'https://api.einstein.ai/';

        String httpEndpoint = req.getEndpoint();
        System.debug('HttpMock httpEndpoint: '+ httpEndpoint); //by Rodrigo Parizotto
        String httpMethod = req.getMethod();
		System.debug('HttpMock httpMethod: '+ httpMethod); //by Rodrigo Parizotto
        
        //adding error
        if (forceHttpError) return mockError(req);
        
        if (httpMethod.equals('GET')) {
            if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/models')) {
                return mockGetModels(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/examples/43887')) {
                return mockGetExample(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/examples')) {
                return mockGetExamples(req);
            } else if(httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57')) {
                return mockGetDataset(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets')) {
                if (httpEndpoint.endsWith('global=true')) {
                    return mockGetGlobalDatasets(req);
                } else {
                    return mockGetDatasets(req);
                }
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/labels/614')) {
                return mockGetLabel(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/train/7JXCXTRXTMNLJCEF2DR5CJ46QU')) {
                return mockGetModel(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/models/7JXCXTRXTMNLJCEF2DR5CJ46QU/lc')) {
                return mockGetModelLearningCurve(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/models/7JXCXTRXTMNLJCEF2DR5CJ46QU')) {
                return mockGetModelMetrics(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/apiusage')) {
                return mockGetApiUsage(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/datasets')) { //by Rodrigo Parizotto                
                return mockGetLanguageDatasets(req);            
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/datasets/1234/models')) { //by Rodrigo Parizotto                
                return mockGetLanguageModels(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/models/57')) { //by Jorge Moreira                
                return mockGetModelMetrics2(req);
            }
                
        } else if (httpMethod.equals('POST')) {
            if (httpEndpoint.endsWith('retrain')) {
                return mockRetrainDataset(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/labels')) {
                return mockCreateLabel(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/57/examples')) {
                return mockCreateExample(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/train')) {
                return mockTrainDataset(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/upload/sync')) {
                return mockCreateDatasetSync(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/upload')) {
                return mockCreateDatasetAsync(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/predict')) {
                return mockPredictBase64(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/detect')) {
                return mockDetectBase64(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/intent')) {             // Minor changes in the function definition by Shaurya Bajaj
                return mockPredictIntent(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/Lower40_intent')) {     // JM - Cover scenario when predicted cc is lower than 40%
                return mockPredictIntentLower40(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/BadDocument_intent')) { // JM - Cover scenario when document is missing
                return mockPredictIntentBadDocument(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/sentiment')) {
                return mockPredictSentiment(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/feedback')) {
                return mockPredictFeedbackImage(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/language/feedback')) {
                return mockPredictFeedbackLanguage(req);
            }else if (httpEndpoint.startsWith('callout:Guided_Resolution_Login')) { //by Jorge Moreira                
                return mockGetGRToken(req);
            }else if (httpEndpoint.startsWith('callout:Guided_Resolution')) { //by Jorge Moreira                
                return mockGetGR(req);
            }else if (httpEndpoint.startsWith('https://sdsazmlgw01.dell.com/loginError')) { //by Jorge Montalvão
                return mockGetGRUnauthorized(req);
            }else if (httpEndpoint.startsWith('https://sdsazmlgw01.dell.com/api/overall_guided_res_wrapper_error')) { //by Jorge Montalvão
                return mockGetGRUnauthorized(req);
            }else if (httpEndpoint.startsWith('https://sdsazmlgw01.dell.com/api/overall_guided_res_wrapper_bad_result')) { //by Jorge Montalvão
                return mockGetGRBadResult(req);
            }else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/oauth2/token')) { //by Jorge Moreira
                return mockEinsteinJWTBearerFlow(req);
            }
            else if (httpEndpoint.startsWith('abcd')) { 
                return mockEinsteinJWTBearerFlow(req);
            }
        } else if (httpMethod.equals('DELETE')) {
            if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/108')) {
                return mockDeleteDataset(req);
            } else if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/108/examples/43555')) {
                return mockDeleteExample(req);
            }
        } else if (httpMethod.equals('PUT')) {
            if (httpEndpoint.startsWith('https://api.einstein.ai/v2/vision/datasets/1000022/upload')) {
                return mockCreateExamplesFromUrl(req);
            }
        }

        return null;
    }

    private static HTTPResponse mockError(HTTPRequest req) {

        String jsonResponse = '{"ERROR": "HTTP MOCK ERROR"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(500);
        return res;

    }

    private static HTTPResponse mockCreateDatasetSync(HTTPRequest req) {

        String jsonResponse = '{"id":57,"name":"Beach and Mountain","createdAt":"2016-09-15T16:51:41.000+0000","updatedAt":"2016-09-15T16:51:41.000+0000","labelSummary":{"labels":[{"id":611,"datasetId":57,"name":"beach","numExamples":0},{"id":612,"datasetId":57,"name":"mountain","numExamples":0}]},"totalExamples":0,"totalLabels":2,"available":true,"statusMsg":"SUCCEEDED","object":"dataset"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockCreateDatasetAsync(HTTPRequest req) {

        String jsonResponse = '{"id":57,"name":"Beach and Mountain","createdAt":"2016-09-15T16:51:41.000+0000","updatedAt":"2016-09-15T16:51:41.000+0000","labelSummary":{"labels":[{"id":611,"datasetId":57,"name":"beach","numExamples":0},{"id":612,"datasetId":57,"name":"mountain","numExamples":0}]},"totalExamples":0,"totalLabels":2,"available":true,"statusMsg":"SUCCEEDED","object":"dataset"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetDataset(HTTPRequest req) {

        String jsonResponse = '{"id":57,"name":"Beach and Mountain","createdAt":"2016-09-15T16:51:41.000+0000","updatedAt":"2016-09-15T16:51:41.000+0000","labelSummary":{"labels":[{"id":612,"datasetId":57,"name":"beach","numExamples":49},{"id":611,"datasetId":57,"name":"mountain","numExamples":50}]},"totalExamples":99,"totalLabels":2,"available":true,"statusMsg":"SUCCEEDED","object":"dataset"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetDatasets(HTTPRequest req) {

        String jsonResponse = '{"object":"list","data":[{"id":57,"name":"Beach and Mountain","updatedAt":"2016-09-09T22:39:22.000+0000","createdAt":"2016-09-09T22:39:22.000+0000","labelSummary":{"labels":[{"id":36,"datasetId":57,"name":"beach","numExamples":49},{"id":37,"datasetId":57,"name":"mountain","numExamples":50}]},"totalExamples":99,"totalLabels":2,"available":true,"statusMsg":"SUCCEEDED","object":"dataset"},{"id":58,"name":"Brain Scans","updatedAt":"2016-09-24T21:35:27.000+0000","createdAt":"2016-09-24T21:35:27.000+0000","labelSummary":{"labels":[{"id":122,"datasetId":58,"name":"healthy","numExamples":5064},{"id":123,"datasetId":58,"name":"unhealthy","numExamples":5080}]},"totalExamples":10144,"totalLabels":2,"available":true,"statusMsg":"SUCCEEDED","object":"dataset"}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetGlobalDatasets(HTTPRequest req) {
		
        String jsonResponse = '{"object":"list","data":[{"id":1005161,"name":"other","createdAt":"2017-06-27T23:21:16.000+0000","updatedAt":"2017-06-27T23:21:19.000+0000","labelSummary":{"labels":[{"id":24197,"datasetId":1005161,"name":"other","numExamples":455}]},"totalExamples":455,"totalLabels":1,"available":true,"statusMsg":"SUCCEEDED","type":"image","object":"dataset"}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
	
    //By Rodrigo Parizotto
    private static HTTPResponse mockGetLanguageDatasets(HTTPRequest req) {
		system.debug('mockGetLanguageDatasets');
        String jsonResponse = '{     "object": "list",     "data": [         {             "id": 1062344,             "name": "case_routing_intent.csv",             "createdAt": "2018-06-13T14:11:29.000+0000",             "updatedAt": "2018-06-13T14:11:30.000+0000",             "labelSummary": {                 "labels": [                     {                         "id": 773161,                         "datasetId": 1062344,                         "name": "Order Change",                         "numExamples": 26                     },                     {                         "id": 773162,                         "datasetId": 1062344,                         "name": "Sales Opportunity",                         "numExamples": 44                     },                     {                         "id": 773163,                         "datasetId": 1062344,                         "name": "Billing",                         "numExamples": 24                     },                     {                         "id": 773164,                         "datasetId": 1062344,                         "name": "Shipping Info",                         "numExamples": 30                     },                     {                         "id": 773165,                         "datasetId": 1062344,                         "name": "Password Help",                         "numExamples": 26                     }                 ]             },             "totalExamples": 150,             "totalLabels": 5,             "available": true,             "statusMsg": "SUCCEEDED",             "type": "text-intent",             "object": "dataset"         },         {             "id": 1063592,             "name": "case_routing_intent.csv",             "createdAt": "2018-06-20T19:53:50.000+0000",             "updatedAt": "2018-06-20T19:53:51.000+0000",             "labelSummary": {                 "labels": [                     {                         "id": 858925,                         "datasetId": 1063592,                         "name": "Order Change",                         "numExamples": 26                     },                     {                         "id": 858926,                         "datasetId": 1063592,                         "name": "Sales Opportunity",                         "numExamples": 44                     },                     {                         "id": 858927,                         "datasetId": 1063592,                         "name": "Billing",                         "numExamples": 24                     },                     {                         "id": 858928,                         "datasetId": 1063592,                         "name": "Shipping Info",                         "numExamples": 30                     },                     {                         "id": 858929,                         "datasetId": 1063592,                         "name": "Password Help",                         "numExamples": 26                     }                 ]             },             "totalExamples": 150,             "totalLabels": 5,             "available": true,             "statusMsg": "SUCCEEDED",             "type": "text-intent",             "object": "dataset"         }     ] }';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
    
    //By Rodrigo Parizotto
    private static HTTPResponse mockGetLanguageModels(HTTPRequest req) {
		system.debug('mockGetLanguageModels');
        String jsonResponse = '{     "object": "list",     "data": [         {             "datasetId": 1062344,             "datasetVersionId": 29491,             "name": "case_routing_intent.csv model",             "status": "SUCCEEDED",             "progress": 1,             "createdAt": "2018-06-13T14:12:04.000+0000",             "updatedAt": "2018-06-13T14:16:59.000+0000",             "object": "model",             "modelId": "FSJW3BVK554ZGWMSBOTCHOVXSY",             "modelType": "text-intent"         },         {             "datasetId": 1062344,             "datasetVersionId": 30655,             "name": "case_routing_intent.csv model",             "status": "SUCCEEDED",             "progress": 1,             "createdAt": "2018-06-22T18:12:50.000+0000",             "updatedAt": "2018-06-22T18:17:53.000+0000",             "object": "model",             "modelId": "VQNTGOICGQKQPDPK6SZS63Z5WU",             "modelType": "text-intent"         }     ] }';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
    //By Jorge Moreira
    private static HTTPResponse mockGetModelMetrics2(HTTPRequest req) {
		system.debug('mockGetModelMetrics2');
        String jsonResponse = '{"createdAt":"2018-07-06T21:15:10.000+0000","metricsData":{"f1":[0,0,0.7,0,0,0.96,0,1,0.8235294117647058,0.8679245283018867,0,0.28571428571428575,1,0.9135802469135802,1,0.9523809523809524,0,1,1,0.9318181818181818,0.6666666666666665,0,0.6829268292682926,0.6666666666666666,0.8000000000000002,0.9333333333333332,0.8,0.8,0,1,1,0,1,0,0.8,0.9090909090909092,0.888888888888889,0.6666666666666666,0.8,1,0,0.8666666666666666,0.8571428571428571,0.8000000000000002,0.7499999999999999,0.3333333333333333,0.8571428571428572],"labels":["Bit Locker","Bluetooth","Drivers","Initial Setup","Memory","Booting","Graphics Card","Diagnostic","System Performance","Hard Drive","CD/DVD Drive","App/Software","SD Card","LCD/Monitor","Touchpad","Battery","DOA","Docking","Incorrect Shipment","General Queries","Password","Touchscreen","OS","USB","Internet/Wireless","Keyboard","Media","Microsoft Office","Webcam","Data","Controller","System Warning","Fan","Storage","Shutdown","Mouse","BIOS","Motherboard","Physical Damage","Printer/Scanner","Microsoft Account","Audio Device","Virus/Adware/Malware/Spyware","AC Adaptor","Power","Call Logs","Other"],"threshold":{"OS":0.96722,"DOA":1,"Fan":0.75666,"USB":0.85399,"BIOS":0.78999,"Data":0.99495,"Media":0.92753,"Mouse":0.99769,"Other":0.86154,"Power":0.94284,"Memory":1,"Webcam":1,"Battery":0.77274,"Booting":0.05428,"Docking":0.99634,"Drivers":0.98643,"SD Card":0.59855,"Storage":0.12123,"Keyboard":0.06529,"Password":0.62101,"Shutdown":0.7541,"Touchpad":0.93562,"Bluetooth":1,"Call Logs":0.98341,"AC Adaptor":0.99386,"Bit Locker":1,"Controller":0.94277,"Diagnostic":0.30693,"Hard Drive":0.91283,"LCD/Monitor":0.49161,"Motherboard":0.90603,"Touchscreen":0.15018,"App/Software":0.84551,"Audio Device":0.97061,"CD/DVD Drive":1,"Graphics Card":1,"Initial Setup":1,"System Warning":0.22198,"General Queries":0.48065,"Physical Damage":0.99682,"Printer/Scanner":0.74447,"Microsoft Office":0.96602,"Internet/Wireless":0.76402,"Microsoft Account":1,"Incorrect Shipment":0.95524,"System Performance":0.99338,"Virus/Adware/Malware/Spyware":0.96853},"testAccuracy":0.8588516712188721,"trainingLoss":0.031570771038090084,"confusionMatrix":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,72,0,0,0,1,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1],[0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,37,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,2,0,0,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,3,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,1,0],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,1,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0],[0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1],[0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9]],"trainingAccuracy":0.9952522436306102,"precisionRecallCurve":{"f1":[0.0513,0.0513,0.0513,0.0513,0.0514,0.0514,0.0514,0.0514,0.0514,0.0514,0.0515,0.0516,0.0516,0.0516,0.0516,0.0517,0.0517,0.0517,0.0518,0.0519,0.0519,0.0518,0.0518,0.0518,0.0518,0.0519,0.0519,0.052,0.052,0.052,0.052,0.052,0.0521,0.0522,0.0522,0.0522,0.0522,0.0523,0.0523,0.0523,0.0523,0.0524,0.0524,0.0524,0.0524,0.0524,0.0525,0.0525,0.0525,0.0526,0.0526,0.0526,0.0526,0.0526,0.0526,0.0527,0.0527,0.0528,0.0528,0.0528,0.0528,0.0528,0.0529,0.0529,0.0529,0.053,0.053,0.053,0.053,0.053,0.053,0.0531,0.0531,0.0531,0.0531,0.0531,0.0532,0.0532,0.0533,0.0533,0.0533,0.0533,0.0533,0.0533,0.0534,0.0534,0.0534,0.0534,0.0534,0.0535,0.0535,0.0535,0.0535,0.0535,0.0535,0.0535,0.0536,0.0536,0.0536,0.0536,0.0536,0.0536,0.0536,0.0537,0.0537,0.0537,0.0537,0.0538,0.0538,0.0538,0.0539,0.0539,0.0539,0.0539,0.054,0.054,0.054,0.054,0.0541,0.0541,0.0541,0.0541,0.0541,0.0541,0.0541,0.0541,0.0541,0.0542,0.0542,0.0543,0.0543,0.0543,0.0543,0.0543,0.0544,0.0544,0.0544,0.0544,0.0544,0.0545,0.0545,0.0546,0.0546,0.0546,0.0547,0.0547,0.0548,0.0548,0.0548,0.0549,0.0549,0.0549,0.0549,0.055,0.055,0.055,0.055,0.055,0.055,0.055,0.055,0.055,0.0551,0.0551,0.0552,0.0552,0.0552,0.0553,0.0553,0.0553,0.0554,0.0554,0.0556,0.0556,0.0556,0.0556,0.0556,0.0557,0.0557,0.0557,0.0557,0.0558,0.0558,0.0559,0.0559,0.0559,0.056,0.056,0.056,0.056,0.056,0.056,0.056,0.0561,0.0561,0.0561,0.0562,0.0562,0.0563,0.0563,0.0564,0.0564,0.0565,0.0566,0.0566,0.0567,0.0567,0.0568,0.0568,0.0568,0.0568,0.0568,0.0569,0.0569,0.0569,0.0569,0.0569,0.057,0.057,0.057,0.0571,0.0571,0.0571,0.0571,0.0571,0.0572,0.0572,0.0572,0.0573,0.0573,0.0573,0.0573,0.0574,0.0574,0.0574,0.0574,0.0574,0.0574,0.0575,0.0575,0.0575,0.0575,0.0575,0.0575,0.0576,0.0576,0.0576,0.0576,0.0577,0.0577,0.0577,0.0577,0.0578,0.0578,0.058,0.058,0.0581,0.0581,0.0581,0.0582,0.0582,0.0582,0.0583,0.0584,0.0584,0.0584,0.0584,0.0585,0.0585,0.0586,0.0586,0.0587,0.0587,0.0587,0.0587,0.0588,0.0588,0.0589,0.0589,0.0589,0.0589,0.059,0.059,0.059,0.059,0.0592,0.0592,0.0592,0.0593,0.0593,0.0593,0.0593,0.0594,0.0594,0.0594,0.0595,0.0595,0.0595,0.0596,0.0596,0.0596,0.0596,0.0597,0.0597,0.0598,0.0598,0.0599,0.0599,0.0599,0.06,0.06,0.06,0.0602,0.0602,0.0602,0.0603,0.0603,0.0604,0.0606,0.0606,0.0607,0.0608,0.0608,0.0608,0.0608,0.0608,0.0609,0.0609,0.0609,0.0609,0.061,0.061,0.061,0.0611,0.0611,0.0611,0.0611,0.0612,0.0612,0.0612,0.0613,0.0614,0.0614,0.0614,0.0614,0.0614,0.0614,0.0615,0.0615,0.0615,0.0615,0.0616,0.0616,0.0617,0.0618,0.0618,0.0618,0.0618,0.0618,0.0618,0.0619,0.0619,0.0619,0.0619,0.0619,0.062,0.062,0.062,0.062,0.062,0.062,0.062,0.0621,0.0621,0.0622,0.0622,0.0623,0.0623,0.0623,0.0623,0.0624,0.0624,0.0625,0.0625,0.0625,0.0625,0.0626,0.0626,0.0627,0.0627,0.0627,0.0627,0.0627,0.0628,0.0629,0.063,0.063,0.063,0.0631,0.0631,0.0631,0.0631,0.0632,0.0632,0.0632,0.0632,0.0633,0.0633,0.0633,0.0633,0.0633,0.0633,0.0634,0.0634,0.0635,0.0636,0.0636,0.0636,0.0636,0.0636,0.0637,0.0637,0.0637,0.0637,0.0638,0.0638,0.0639,0.064,0.064,0.064,0.064,0.064,0.0641,0.0641,0.0642,0.0643,0.0643,0.0643,0.0643,0.0643,0.0644,0.0644,0.0644,0.0644,0.0645,0.0645,0.0646,0.0646,0.0646,0.0647,0.0647,0.0647,0.0647,0.0647,0.0648,0.0648,0.0648,0.0648,0.0648,0.0649,0.0649,0.0649,0.065,0.065,0.0651,0.0652,0.0652,0.0654,0.0654,0.0655,0.0655,0.0655,0.0656,0.0656,0.0656,0.0656,0.0656,0.0657,0.0657,0.0658,0.0658,0.0659,0.066,0.066,0.066,0.066,0.0661,0.0661,0.0662,0.0663,0.0663,0.0663,0.0663,0.0664,0.0665,0.0666,0.0666,0.0668,0.0669,0.067,0.067,0.067,0.0671,0.0672,0.0672,0.0672,0.0673,0.0673,0.0674,0.0674,0.0674,0.0675,0.0675,0.0675,0.0677,0.0677,0.0677,0.0677,0.0677,0.0678,0.0678,0.0678,0.0678,0.0678,0.0679,0.0679,0.068,0.068,0.0681,0.0682,0.0682,0.0683,0.0683,0.0683,0.0683,0.0684,0.0684,0.0684,0.0685,0.0686,0.0686,0.0687,0.0687,0.0687,0.0688,0.0688,0.0688,0.0688,0.0689,0.0689,0.069,0.0691,0.0691,0.0691,0.0692,0.0692,0.0692,0.0693,0.0693,0.0694,0.0694,0.0694,0.0694,0.0695,0.0695,0.0695,0.0696,0.0696,0.0697,0.0697,0.0697,0.0698,0.0701,0.0701,0.0701,0.0701,0.0701,0.0701,0.0702,0.0702,0.0702,0.0703,0.0703,0.0703,0.0704,0.0704,0.0705,0.0705,0.0706,0.0706,0.0708,0.0708,0.0708,0.0709,0.0709,0.0711,0.0712,0.0712,0.0712,0.0712,0.0712,0.0713,0.0714,0.0714,0.0714,0.0714,0.0714,0.0715,0.0715,0.0715,0.0716,0.0717,0.0718,0.0719,0.0719,0.0719,0.072,0.0721,0.0721,0.0721,0.0725,0.0727,0.0727,0.0727,0.0727,0.0728,0.0728,0.0728,0.0729,0.0731,0.0732,0.0734,0.0734,0.0734,0.0734,0.0734,0.0735,0.0735,0.0736,0.0736,0.0737,0.0738,0.0738,0.0739,0.0739,0.0739,0.0739,0.074,0.074,0.0741,0.0741,0.0743,0.0743,0.0743,0.0743,0.0744,0.0744,0.0745,0.0745,0.0747,0.0747,0.0747,0.0747,0.0749,0.0749,0.075,0.0751,0.0753,0.0754,0.0754,0.0754,0.0754,0.0755,0.0756,0.0756,0.0756,0.0757,0.076,0.0761,0.0761,0.0761,0.0762,0.0762,0.0762,0.0762,0.0762,0.0762,0.0764,0.0765,0.0766,0.0766,0.0766,0.0767,0.0768,0.0768,0.0769,0.0769,0.0769,0.0771,0.0771,0.0771,0.077,0.0773,0.0773,0.0774,0.0774,0.0774,0.0775,0.0775,0.0776,0.0778,0.0778,0.0779,0.0781,0.0782,0.0782,0.0782,0.0782,0.0782,0.0784,0.0784,0.0787,0.0787,0.0787,0.0789,0.0789,0.0789,0.0789,0.079,0.079,0.079,0.0791,0.0791,0.0792,0.0793,0.0795,0.0796,0.0796,0.0797,0.0797,0.0798,0.0799,0.08,0.0801,0.0801,0.0801,0.0802,0.0802,0.0802,0.0803,0.0803,0.0803,0.0806,0.0806,0.0807,0.0808,0.0809,0.0809,0.081,0.0811,0.0812,0.0813,0.0813,0.0814,0.0814,0.0815,0.0815,0.0815,0.0815,0.0816,0.0816,0.0818,0.0818,0.0819,0.0819,0.0819,0.0819,0.082,0.0822,0.0822,0.0823,0.0823,0.0824,0.0825,0.0826,0.0826,0.0827,0.0828,0.0828,0.083,0.083,0.083,0.083,0.0831,0.0831,0.0831,0.0832,0.0833,0.0834,0.0835,0.0835,0.0835,0.0835,0.0836,0.0836,0.0837,0.0837,0.0838,0.0839,0.084,0.084,0.0843,0.0843,0.0843,0.0844,0.0844,0.0845,0.0845,0.0847,0.0847,0.0848,0.0848,0.0848,0.0849,0.085,0.085,0.0851,0.0851,0.0852,0.0852,0.0855,0.0855,0.0855,0.0856,0.0856,0.0857,0.0857,0.0858,0.0858,0.0859,0.0859,0.086,0.0861,0.0861,0.0861,0.0862,0.0862,0.0862,0.0863,0.0863,0.0863,0.0863,0.0864,0.0864,0.0866,0.0866,0.0866,0.0867,0.0867,0.0868,0.0868,0.0868,0.0868,0.0871,0.0872,0.0873,0.0873,0.0875,0.0875,0.0875,0.0877,0.0878,0.0878,0.0878,0.0879,0.088,0.088,0.088,0.0883,0.0883,0.0884,0.0884,0.0885,0.0886,0.0886,0.0887,0.0887,0.0888,0.0888,0.0889,0.0889,0.089,0.089,0.089,0.0891,0.0891,0.0891,0.0892,0.0892,0.0892,0.0893,0.0893,0.0894,0.0896,0.0896,0.0896,0.0896,0.0896,0.0896,0.0897,0.0897,0.0897,0.0898,0.0899,0.0901,0.0902,0.0903,0.0903,0.0904,0.0904,0.0904,0.0906,0.0907,0.0907,0.0908,0.0908,0.091,0.091,0.091,0.0912,0.0912,0.0913,0.0915,0.0915,0.0916,0.0916,0.0917,0.0917,0.0918,0.0919,0.0919,0.0919,0.0921,0.0922,0.0923,0.0924,0.0924,0.0924,0.0924,0.0926,0.0926,0.0927,0.0927,0.0928,0.093,0.093,0.093,0.0932,0.0932,0.0932,0.0932,0.0932,0.0933,0.0933,0.0933,0.0934,0.0935,0.0935,0.0936,0.0939,0.094,0.094,0.0941,0.0941,0.0941,0.0944,0.0944,0.0945,0.0942,0.0944,0.0948,0.0948,0.0949,0.0951,0.0952,0.0952,0.0953,0.0955,0.0956,0.0956,0.0957,0.0957,0.0957,0.0958,0.0961,0.0962,0.0963,0.0963,0.0965,0.0967,0.0968,0.097,0.0973,0.0974,0.0975,0.0976,0.0976,0.0976,0.0976,0.0978,0.0979,0.098,0.098,0.0981,0.0982,0.0983,0.0983,0.0984,0.0984,0.0984,0.0986,0.0988,0.0989,0.0991,0.0992,0.0994,0.0994,0.0996,0.0997,0.0997,0.0998,0.1,0.1,0.1001,0.1002,0.1002,0.1003,0.1003,0.1003,0.1003,0.1004,0.1005,0.1006,0.1006,0.1006,0.1006,0.1007,0.1007,0.1007,0.101,0.1012,0.1016,0.1016,0.1017,0.1018,0.1018,0.102,0.1023,0.1024,0.1024,0.1026,0.1026,0.1027,0.1028,0.1029,0.103,0.1032,0.1033,0.1034,0.1039,0.104,0.104,0.1041,0.1042,0.1044,0.1047,0.1047,0.1048,0.1051,0.1055,0.1056,0.1057,0.1057,0.1059,0.1061,0.1061,0.1064,0.1066,0.1068,0.1071,0.1071,0.1071,0.1072,0.1072,0.1075,0.1075,0.1076,0.1076,0.1077,0.1077,0.1079,0.1086,0.1088,0.1089,0.109,0.1091,0.1092,0.1093,0.1096,0.1097,0.1101,0.1102,0.1102,0.1102,0.1102,0.1103,0.1103,0.1103,0.1104,0.1106,0.1106,0.1108,0.1111,0.1111,0.1116,0.1116,0.1116,0.1117,0.1118,0.1119,0.1119,0.112,0.112,0.1123,0.1124,0.1124,0.1124,0.1124,0.1127,0.1127,0.1131,0.1131,0.1132,0.1132,0.1133,0.1135,0.1135,0.1138,0.1139,0.114,0.114,0.1141,0.1142,0.1143,0.1147,0.1148,0.1151,0.1152,0.1153,0.1153,0.1154,0.1156,0.1158,0.116,0.1163,0.1164,0.1167,0.1167,0.1169,0.117,0.117,0.1172,0.1172,0.1173,0.1173,0.1177,0.1178,0.1178,0.118,0.118,0.1181,0.1182,0.1183,0.1184,0.1185,0.1185,0.1186,0.1186,0.1188,0.1189,0.1189,0.119,0.1192,0.1194,0.1197,0.1201,0.1204,0.1205,0.1206,0.1206,0.1207,0.1207,0.1208,0.121,0.1212,0.1213,0.1215,0.122,0.1221,0.1223,0.1223,0.1226,0.1227,0.1228,0.1228,0.1231,0.1231,0.1232,0.1234,0.1234,0.1234,0.1237,0.1238,0.1238,0.1245,0.1246,0.1247,0.1247,0.1251,0.1252,0.1252,0.1254,0.1261,0.1261,0.1263,0.1265,0.1265,0.1266,0.1269,0.1274,0.1277,0.1284,0.1284,0.1288,0.1288,0.1289,0.1293,0.1296,0.1297,0.1299,0.1301,0.1301,0.1301,0.1304,0.1305,0.1307,0.1309,0.1311,0.1313,0.1315,0.1316,0.1317,0.1318,0.1315,0.1316,0.132,0.132,0.132,0.1321,0.1322,0.1323,0.1326,0.1326,0.1327,0.1328,0.133,0.1333,0.1334,0.1334,0.1336,0.1341,0.1341,0.1342,0.1343,0.1344,0.1344,0.1347,0.1348,0.1355,0.1356,0.1357,0.1358,0.1359,0.136,0.1367,0.1378,0.1378,0.1382,0.1382,0.1382,0.1389,0.139,0.1392,0.1398,0.1401,0.1401,0.1402,0.1403,0.1404,0.1407,0.1407,0.1408,0.1408,0.1408,0.1409,0.1411,0.1411,0.1411,0.1412,0.1414,0.1415,0.1421,0.1423,0.1428,0.1431,0.1432,0.1436,0.1437,0.144,0.1441,0.1442,0.1443,0.1444,0.1446,0.1447,0.1448,0.1448,0.1449,0.1455,0.1462,0.1466,0.1469,0.1473,0.148,0.1482,0.1484,0.1485,0.1489,0.149,0.1493,0.1494,0.1497,0.1497,0.1497,0.1498,0.1499,0.1504,0.1505,0.1506,0.1509,0.1513,0.1514,0.1515,0.1517,0.1518,0.1519,0.1523,0.1523,0.1525,0.1526,0.1527,0.1529,0.1532,0.1532,0.1534,0.1537,0.1539,0.1542,0.1544,0.1545,0.1546,0.1547,0.155,0.155,0.1551,0.1552,0.1555,0.1558,0.1561,0.1571,0.1571,0.1571,0.1582,0.1583,0.1585,0.1586,0.159,0.1592,0.1594,0.1596,0.1596,0.1599,0.16,0.1601,0.1601,0.1604,0.1604,0.1605,0.1607,0.1612,0.1612,0.1615,0.1622,0.1623,0.1625,0.1625,0.1625,0.1627,0.1629,0.1632,0.1634,0.1637,0.164,0.1641,0.1643,0.1647,0.1649,0.1651,0.1652,0.1656,0.1658,0.1659,0.166,0.1661,0.1663,0.1664,0.1667,0.1673,0.1676,0.1677,0.1682,0.1688,0.1689,0.17,0.1703,0.1705,0.171,0.1712,0.1713,0.1716,0.1716,0.1719,0.1723,0.1723,0.1729,0.1737,0.1741,0.1742,0.1742,0.175,0.175,0.1765,0.1765,0.1768,0.177,0.1772,0.1774,0.1784,0.1788,0.179,0.1793,0.1798,0.1802,0.1804,0.1805,0.1809,0.181,0.1813,0.1815,0.1821,0.1823,0.1824,0.1826,0.1827,0.1828,0.183,0.1835,0.1838,0.1841,0.1841,0.1847,0.1858,0.1863,0.1863,0.1867,0.187,0.1873,0.1875,0.1876,0.1876,0.189,0.189,0.1898,0.1903,0.1906,0.1918,0.192,0.1925,0.1926,0.1927,0.193,0.1932,0.1933,0.1934,0.1935,0.1936,0.1937,0.1943,0.1949,0.1956,0.1956,0.1957,0.1958,0.1959,0.1965,0.1975,0.1978,0.1979,0.1981,0.1985,0.1985,0.1987,0.1987,0.1991,0.1994,0.2001,0.2002,0.2004,0.2009,0.201,0.2014,0.2018,0.2021,0.2021,0.2023,0.2026,0.2031,0.2031,0.2032,0.2033,0.2036,0.2038,0.2052,0.207,0.2081,0.2083,0.2091,0.2095,0.2097,0.21,0.2101,0.2104,0.211,0.211,0.2111,0.2123,0.2123,0.2124,0.2125,0.2125,0.2126,0.213,0.2132,0.2134,0.2138,0.2138,0.2139,0.214,0.2142,0.2143,0.2143,0.2149,0.2153,0.2154,0.216,0.2165,0.2172,0.2178,0.2182,0.2183,0.2198,0.2205,0.2218,0.2223,0.2237,0.2239,0.224,0.2244,0.2246,0.2255,0.2262,0.2262,0.2264,0.2278,0.2285,0.2293,0.2301,0.2302,0.2305,0.2314,0.2323,0.2326,0.2332,0.2342,0.2351,0.2352,0.2357,0.2364,0.237,0.2372,0.2379,0.2382,0.2398,0.24,0.2407,0.2408,0.2426,0.2431,0.243,0.2438,0.244,0.2443,0.245,0.2457,0.2469,0.2477,0.2493,0.2498,0.2502,0.2521,0.2524,0.255,0.2554,0.2554,0.2563,0.2565,0.2596,0.2598,0.2602,0.2613,0.2619,0.262,0.2629,0.263,0.2633,0.2634,0.2661,0.2662,0.2664,0.2743,0.2757,0.2761,0.2765,0.2773,0.2779,0.2831,0.2846,0.2851,0.2855,0.2859,0.2868,0.2877,0.2894,0.2908,0.2911,0.2914,0.2914,0.2917,0.2921,0.2928,0.2941,0.2942,0.2947,0.2947,0.2949,0.2954,0.2968,0.2968,0.2969,0.2972,0.2972,0.2978,0.298,0.2982,0.2985,0.2987,0.2994,0.2996,0.3008,0.3006,0.301,0.301,0.3013,0.3015,0.3049,0.3061,0.3065,0.3065,0.3078,0.3086,0.3091,0.3092,0.3092,0.3095,0.3112,0.3116,0.3117,0.3122,0.3126,0.3131,0.3133,0.3142,0.3143,0.3151,0.3159,0.3172,0.3179,0.3179,0.3185,0.3222,0.3228,0.3233,0.3233,0.324,0.3245,0.3261,0.3272,0.328,0.3287,0.3288,0.3291,0.3305,0.3307,0.3315,0.332,0.3322,0.3324,0.3329,0.334,0.3349,0.3365,0.3367,0.3368,0.3377,0.3385,0.3407,0.3421,0.3424,0.3433,0.3442,0.3446,0.3466,0.3472,0.3478,0.3487,0.3496,0.3517,0.3517,0.3519,0.3536,0.3537,0.355,0.3551,0.3554,0.357,0.3604,0.361,0.3615,0.3618,0.368,0.3683,0.3685,0.3697,0.3703,0.3708,0.3704,0.3708,0.3713,0.3734,0.3755,0.3779,0.379,0.3839,0.385,0.3859,0.3865,0.3867,0.3867,0.3889,0.3899,0.3905,0.3928,0.3951,0.3996,0.4028,0.403,0.4038,0.4044,0.4049,0.4049,0.4051,0.4069,0.4073,0.4073,0.4084,0.4117,0.4126,0.4141,0.4141,0.4143,0.4176,0.4182,0.4211,0.4227,0.4256,0.4286,0.43,0.4304,0.4317,0.4326,0.434,0.4357,0.4359,0.4362,0.4371,0.4381,0.4393,0.4405,0.4415,0.4415,0.4421,0.4443,0.4448,0.4466,0.4481,0.4501,0.4509,0.4527,0.4537,0.4566,0.4565,0.4581,0.4581,0.4601,0.4604,0.4606,0.4623,0.4639,0.4686,0.4702,0.4708,0.4714,0.4771,0.4811,0.482,0.4826,0.4922,0.5013,0.5032,0.5074,0.5081,0.5088,0.5124,0.5124,0.5128,0.5195,0.5216,0.5223,0.5251,0.5258,0.528,0.5291,0.5298,0.5338,0.5342,0.5378,0.5413,0.5489,0.5501,0.5557,0.5634,0.5638,0.5638,0.5712,0.5742,0.5823,0.5832,0.5863,0.5962,0.5966,0.6066,0.6075,0.6104,0.6167,0.6237,0.6252,0.6318,0.6349,0.6395,0.6491,0.6502,0.6536,0.6552,0.6558,0.6597,0.6714,0.6726,0.6732,0.6744,0.6903,0.6922,0.6947,0.6966,0.7018,0.7019,0.7045,0.7097,0.7117,0.7166,0.7224,0.7322,0.7394,0.7637,0.7732,0.7864,0.7881,0.797,0.7978,0.8231,0.825,0.8345,0.8422,0.8668,0.8694,0.8708,0.8633,0.8586,0.8586,0.8582,0.8549,0.8512,0.8379,0.834,0.8293,0.8242,0.8253,0.8253,0.8157,0.8125,0.8055,0.8022,0.7917,0.79,0.7866,0.7837,0.782,0.7745,0.7686,0.7601,0.7547,0.7511,0.7504,0.7386,0.7284,0.7169,0.7179,0.7179,0.7102,0.7003,0.6923,0.6923,0.6688,0.6561,0.6474,0.6353,0.5967,0.592,0.5631,0.5533,0.5458,0.5417,0.5053,0.4865,0.4727,0.4473,0.4473,0.2656,0.262,0.1944,0],"recallprecision":[0.0263,0.0263,0.0263,0.0264,0.0264,0.0264,0.0264,0.0264,0.0264,0.0264,0.0264,0.0265,0.0265,0.0265,0.0265,0.0265,0.0265,0.0266,0.0266,0.0266,0.0266,0.0266,0.0266,0.0266,0.0266,0.0266,0.0267,0.0267,0.0267,0.0267,0.0267,0.0267,0.0268,0.0268,0.0268,0.0268,0.0268,0.0268,0.0269,0.0269,0.0269,0.0269,0.0269,0.0269,0.0269,0.0269,0.027,0.027,0.027,0.027,0.027,0.027,0.027,0.027,0.027,0.0271,0.0271,0.0271,0.0271,0.0271,0.0271,0.0271,0.0272,0.0272,0.0272,0.0272,0.0272,0.0272,0.0272,0.0272,0.0272,0.0273,0.0273,0.0273,0.0273,0.0273,0.0273,0.0273,0.0274,0.0274,0.0274,0.0274,0.0274,0.0274,0.0274,0.0274,0.0274,0.0274,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0275,0.0276,0.0276,0.0276,0.0276,0.0276,0.0276,0.0276,0.0276,0.0276,0.0277,0.0277,0.0277,0.0277,0.0277,0.0277,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0278,0.0279,0.0279,0.0279,0.0279,0.0279,0.0279,0.0279,0.0279,0.028,0.028,0.028,0.028,0.028,0.028,0.0281,0.0281,0.0281,0.0281,0.0281,0.0282,0.0282,0.0282,0.0282,0.0282,0.0282,0.0282,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0283,0.0284,0.0284,0.0284,0.0284,0.0284,0.0284,0.0285,0.0285,0.0286,0.0286,0.0286,0.0286,0.0286,0.0286,0.0287,0.0287,0.0287,0.0287,0.0287,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0288,0.0289,0.0289,0.0289,0.0289,0.029,0.029,0.029,0.029,0.0291,0.0291,0.0291,0.0292,0.0292,0.0292,0.0292,0.0292,0.0292,0.0293,0.0293,0.0293,0.0293,0.0293,0.0293,0.0293,0.0293,0.0293,0.0294,0.0294,0.0294,0.0294,0.0294,0.0294,0.0294,0.0295,0.0295,0.0295,0.0295,0.0295,0.0295,0.0295,0.0295,0.0296,0.0296,0.0296,0.0296,0.0296,0.0296,0.0296,0.0296,0.0296,0.0297,0.0297,0.0297,0.0297,0.0297,0.0297,0.0297,0.0297,0.0298,0.0298,0.0299,0.0299,0.0299,0.0299,0.0299,0.03,0.03,0.03,0.0301,0.0301,0.0301,0.0301,0.0301,0.0301,0.0301,0.0302,0.0302,0.0302,0.0302,0.0302,0.0302,0.0303,0.0303,0.0303,0.0303,0.0303,0.0303,0.0304,0.0304,0.0304,0.0304,0.0305,0.0305,0.0305,0.0306,0.0306,0.0306,0.0306,0.0306,0.0306,0.0306,0.0307,0.0307,0.0307,0.0307,0.0307,0.0307,0.0307,0.0308,0.0308,0.0308,0.0308,0.0309,0.0309,0.0309,0.0309,0.0309,0.0309,0.0311,0.0311,0.0311,0.0311,0.0311,0.0311,0.0312,0.0312,0.0313,0.0313,0.0314,0.0314,0.0314,0.0314,0.0314,0.0314,0.0314,0.0314,0.0314,0.0315,0.0315,0.0315,0.0315,0.0315,0.0315,0.0316,0.0316,0.0316,0.0316,0.0317,0.0317,0.0317,0.0317,0.0317,0.0317,0.0317,0.0317,0.0317,0.0317,0.0318,0.0318,0.0319,0.0319,0.0319,0.0319,0.0319,0.0319,0.0319,0.0319,0.0319,0.0319,0.032,0.032,0.032,0.032,0.032,0.032,0.032,0.032,0.032,0.032,0.0321,0.0321,0.0321,0.0321,0.0322,0.0322,0.0322,0.0322,0.0322,0.0323,0.0323,0.0323,0.0323,0.0323,0.0323,0.0323,0.0324,0.0324,0.0324,0.0324,0.0324,0.0325,0.0325,0.0325,0.0325,0.0326,0.0326,0.0326,0.0326,0.0326,0.0326,0.0326,0.0326,0.0327,0.0327,0.0327,0.0327,0.0327,0.0327,0.0328,0.0328,0.0328,0.0328,0.0328,0.0328,0.0329,0.0329,0.0329,0.0329,0.0329,0.0329,0.033,0.033,0.033,0.033,0.033,0.033,0.0331,0.0331,0.0331,0.0331,0.0332,0.0332,0.0332,0.0332,0.0332,0.0332,0.0333,0.0333,0.0333,0.0333,0.0333,0.0333,0.0334,0.0334,0.0334,0.0334,0.0334,0.0334,0.0335,0.0335,0.0335,0.0335,0.0335,0.0335,0.0335,0.0335,0.0335,0.0336,0.0336,0.0336,0.0336,0.0337,0.0337,0.0338,0.0338,0.0339,0.0339,0.0339,0.0339,0.0339,0.0339,0.0339,0.0339,0.034,0.034,0.034,0.034,0.0341,0.0341,0.0341,0.0341,0.0341,0.0342,0.0342,0.0343,0.0343,0.0343,0.0343,0.0343,0.0343,0.0344,0.0344,0.0345,0.0345,0.0346,0.0346,0.0346,0.0347,0.0347,0.0347,0.0348,0.0348,0.0348,0.0348,0.0349,0.0349,0.0349,0.0349,0.0349,0.035,0.035,0.035,0.035,0.035,0.0351,0.0351,0.0351,0.0351,0.0351,0.0351,0.0351,0.0352,0.0352,0.0352,0.0352,0.0353,0.0353,0.0354,0.0354,0.0354,0.0354,0.0354,0.0354,0.0354,0.0355,0.0355,0.0355,0.0356,0.0356,0.0356,0.0356,0.0356,0.0356,0.0356,0.0357,0.0357,0.0357,0.0358,0.0358,0.0358,0.0358,0.0358,0.0358,0.0359,0.0359,0.0359,0.036,0.036,0.036,0.036,0.036,0.036,0.036,0.0361,0.0361,0.0361,0.0361,0.0362,0.0363,0.0363,0.0363,0.0363,0.0363,0.0363,0.0364,0.0364,0.0364,0.0364,0.0364,0.0364,0.0365,0.0365,0.0365,0.0366,0.0366,0.0366,0.0367,0.0367,0.0367,0.0367,0.0368,0.0369,0.0369,0.0369,0.0369,0.0369,0.0369,0.037,0.037,0.037,0.037,0.037,0.0371,0.0371,0.0371,0.0371,0.0372,0.0372,0.0372,0.0373,0.0373,0.0373,0.0373,0.0374,0.0374,0.0374,0.0376,0.0377,0.0377,0.0377,0.0377,0.0378,0.0378,0.0378,0.0378,0.038,0.038,0.0381,0.0381,0.0381,0.0381,0.0381,0.0382,0.0382,0.0382,0.0382,0.0383,0.0383,0.0383,0.0384,0.0384,0.0384,0.0384,0.0384,0.0384,0.0385,0.0385,0.0386,0.0386,0.0386,0.0386,0.0386,0.0387,0.0387,0.0387,0.0388,0.0388,0.0388,0.0388,0.0389,0.0389,0.0389,0.039,0.0391,0.0392,0.0392,0.0392,0.0392,0.0392,0.0393,0.0393,0.0393,0.0393,0.0395,0.0396,0.0396,0.0396,0.0396,0.0396,0.0396,0.0396,0.0396,0.0396,0.0398,0.0398,0.0398,0.0398,0.0398,0.0399,0.0399,0.0399,0.04,0.04,0.04,0.0401,0.0401,0.0401,0.0401,0.0402,0.0402,0.0403,0.0403,0.0403,0.0403,0.0403,0.0404,0.0405,0.0405,0.0406,0.0407,0.0407,0.0407,0.0407,0.0407,0.0407,0.0408,0.0408,0.041,0.041,0.041,0.0411,0.0411,0.0411,0.0411,0.0411,0.0412,0.0412,0.0412,0.0412,0.0412,0.0413,0.0414,0.0415,0.0415,0.0415,0.0415,0.0415,0.0416,0.0417,0.0417,0.0417,0.0417,0.0418,0.0418,0.0418,0.0418,0.0418,0.0419,0.042,0.042,0.0421,0.0421,0.0422,0.0422,0.0422,0.0423,0.0423,0.0424,0.0424,0.0424,0.0425,0.0425,0.0425,0.0425,0.0425,0.0425,0.0425,0.0426,0.0427,0.0427,0.0427,0.0427,0.0427,0.0428,0.0429,0.0429,0.0429,0.043,0.043,0.0431,0.0431,0.0431,0.0432,0.0432,0.0432,0.0433,0.0433,0.0433,0.0433,0.0433,0.0433,0.0434,0.0434,0.0435,0.0436,0.0436,0.0436,0.0436,0.0436,0.0436,0.0437,0.0437,0.0437,0.0438,0.0438,0.0438,0.0439,0.044,0.044,0.044,0.0441,0.0441,0.0441,0.0441,0.0442,0.0443,0.0443,0.0443,0.0443,0.0444,0.0444,0.0444,0.0444,0.0445,0.0445,0.0445,0.0446,0.0447,0.0447,0.0447,0.0448,0.0448,0.0448,0.0448,0.0448,0.0449,0.0449,0.0449,0.045,0.045,0.045,0.045,0.0451,0.0451,0.0451,0.0451,0.0451,0.0451,0.0452,0.0452,0.0453,0.0453,0.0453,0.0453,0.0453,0.0454,0.0454,0.0454,0.0454,0.0455,0.0456,0.0456,0.0457,0.0457,0.0458,0.0458,0.0459,0.0459,0.0459,0.0459,0.046,0.046,0.0461,0.0461,0.0462,0.0462,0.0462,0.0463,0.0463,0.0464,0.0464,0.0464,0.0464,0.0465,0.0465,0.0465,0.0466,0.0466,0.0466,0.0466,0.0466,0.0466,0.0467,0.0467,0.0467,0.0467,0.0468,0.0468,0.0468,0.0469,0.0469,0.0469,0.0469,0.0469,0.0469,0.047,0.047,0.047,0.047,0.0471,0.0472,0.0472,0.0473,0.0473,0.0473,0.0474,0.0474,0.0475,0.0475,0.0475,0.0476,0.0476,0.0477,0.0477,0.0477,0.0478,0.0478,0.0478,0.048,0.048,0.048,0.048,0.048,0.0481,0.0481,0.0482,0.0482,0.0482,0.0483,0.0484,0.0484,0.0484,0.0484,0.0485,0.0485,0.0486,0.0486,0.0486,0.0486,0.0487,0.0488,0.0488,0.0488,0.0489,0.0489,0.0489,0.0489,0.0489,0.0489,0.0489,0.049,0.049,0.049,0.0491,0.0491,0.0493,0.0493,0.0494,0.0494,0.0494,0.0494,0.0496,0.0496,0.0496,0.0495,0.0496,0.0498,0.0498,0.0499,0.05,0.05,0.05,0.0501,0.0502,0.0502,0.0502,0.0503,0.0503,0.0503,0.0503,0.0505,0.0506,0.0506,0.0506,0.0507,0.0508,0.0509,0.051,0.0511,0.0512,0.0513,0.0513,0.0513,0.0513,0.0514,0.0514,0.0515,0.0515,0.0516,0.0516,0.0517,0.0517,0.0517,0.0518,0.0518,0.0518,0.0519,0.052,0.0521,0.0522,0.0522,0.0523,0.0523,0.0524,0.0525,0.0525,0.0526,0.0527,0.0527,0.0527,0.0528,0.0528,0.0528,0.0528,0.0528,0.0528,0.0529,0.0529,0.053,0.053,0.053,0.053,0.053,0.0531,0.0531,0.0532,0.0533,0.0536,0.0536,0.0536,0.0536,0.0537,0.0538,0.054,0.054,0.054,0.0541,0.0541,0.0541,0.0542,0.0543,0.0543,0.0544,0.0545,0.0546,0.0548,0.0549,0.0549,0.0549,0.055,0.0551,0.0553,0.0553,0.0554,0.0555,0.0557,0.0558,0.0558,0.0558,0.0559,0.056,0.0561,0.0562,0.0563,0.0564,0.0566,0.0566,0.0566,0.0567,0.0567,0.0568,0.0568,0.0569,0.0569,0.0569,0.057,0.0571,0.0575,0.0576,0.0576,0.0577,0.0577,0.0578,0.0579,0.058,0.0581,0.0583,0.0583,0.0583,0.0584,0.0584,0.0584,0.0584,0.0584,0.0584,0.0586,0.0586,0.0587,0.0588,0.0588,0.0591,0.0591,0.0592,0.0592,0.0592,0.0593,0.0593,0.0593,0.0594,0.0595,0.0596,0.0596,0.0596,0.0596,0.0597,0.0598,0.06,0.06,0.06,0.06,0.0601,0.0602,0.0602,0.0604,0.0604,0.0605,0.0605,0.0606,0.0606,0.0607,0.0609,0.0609,0.0611,0.0611,0.0612,0.0612,0.0613,0.0614,0.0615,0.0616,0.0618,0.0618,0.062,0.062,0.0621,0.0622,0.0622,0.0623,0.0623,0.0623,0.0624,0.0626,0.0626,0.0626,0.0627,0.0628,0.0628,0.0629,0.0629,0.063,0.063,0.063,0.0631,0.0631,0.0632,0.0632,0.0633,0.0633,0.0635,0.0636,0.0637,0.0639,0.0641,0.0642,0.0642,0.0642,0.0643,0.0643,0.0644,0.0644,0.0646,0.0646,0.0647,0.065,0.0651,0.0652,0.0652,0.0654,0.0654,0.0655,0.0655,0.0656,0.0656,0.0657,0.0658,0.0658,0.0658,0.066,0.066,0.066,0.0665,0.0665,0.0665,0.0666,0.0668,0.0668,0.0669,0.0669,0.0674,0.0674,0.0674,0.0676,0.0676,0.0677,0.0678,0.0681,0.0683,0.0686,0.0687,0.0689,0.0689,0.0689,0.0692,0.0694,0.0694,0.0695,0.0696,0.0696,0.0697,0.0698,0.0699,0.07,0.0701,0.0702,0.0703,0.0704,0.0705,0.0705,0.0706,0.0705,0.0705,0.0707,0.0708,0.0708,0.0708,0.0709,0.0709,0.0711,0.0711,0.0711,0.0712,0.0713,0.0715,0.0716,0.0716,0.0717,0.0719,0.072,0.072,0.0721,0.0721,0.0721,0.0723,0.0724,0.0727,0.0728,0.0729,0.0729,0.073,0.0731,0.0735,0.0741,0.0741,0.0743,0.0743,0.0743,0.0747,0.0748,0.0749,0.0753,0.0754,0.0754,0.0755,0.0755,0.0756,0.0758,0.0758,0.0758,0.0758,0.0759,0.0759,0.076,0.076,0.076,0.076,0.0762,0.0762,0.0766,0.0767,0.077,0.0771,0.0772,0.0774,0.0775,0.0777,0.0778,0.0778,0.0779,0.0779,0.078,0.0781,0.0781,0.0782,0.0782,0.0786,0.0789,0.0792,0.0794,0.0797,0.08,0.0802,0.0803,0.0803,0.0806,0.0806,0.0808,0.0808,0.081,0.081,0.0811,0.0811,0.0812,0.0814,0.0815,0.0815,0.0818,0.082,0.082,0.0821,0.0822,0.0822,0.0823,0.0825,0.0826,0.0827,0.0827,0.0828,0.0829,0.0831,0.0831,0.0832,0.0834,0.0835,0.0837,0.0838,0.0838,0.0839,0.084,0.0841,0.0842,0.0842,0.0843,0.0845,0.0847,0.0848,0.0854,0.0854,0.0854,0.086,0.0861,0.0862,0.0863,0.0865,0.0867,0.0868,0.0869,0.0869,0.0871,0.0871,0.0872,0.0872,0.0874,0.0874,0.0874,0.0876,0.0878,0.0878,0.088,0.0885,0.0885,0.0886,0.0886,0.0886,0.0887,0.0888,0.089,0.0892,0.0893,0.0895,0.0895,0.0897,0.0899,0.0901,0.0902,0.0902,0.0905,0.0906,0.0907,0.0907,0.0908,0.0909,0.0909,0.0911,0.0915,0.0917,0.0917,0.0921,0.0924,0.0925,0.0931,0.0933,0.0934,0.0937,0.0938,0.0939,0.0941,0.0941,0.0942,0.0945,0.0945,0.0949,0.0953,0.0956,0.0956,0.0956,0.0961,0.0961,0.097,0.0971,0.0972,0.0973,0.0974,0.0976,0.0981,0.0984,0.0986,0.0987,0.099,0.0993,0.0994,0.0994,0.0997,0.0997,0.0999,0.1,0.1004,0.1005,0.1006,0.1007,0.1008,0.1008,0.1009,0.1013,0.1015,0.1016,0.1016,0.102,0.1027,0.103,0.103,0.1032,0.1034,0.1036,0.1037,0.1038,0.1038,0.1046,0.1046,0.1051,0.1054,0.1056,0.1064,0.1065,0.1068,0.1068,0.1069,0.1071,0.1072,0.1073,0.1073,0.1074,0.1075,0.1075,0.1079,0.1083,0.1087,0.1087,0.1088,0.1088,0.1089,0.1093,0.1099,0.11,0.1101,0.1102,0.1105,0.1105,0.1106,0.1107,0.1109,0.1111,0.1115,0.1116,0.1117,0.112,0.1121,0.1123,0.1126,0.1127,0.1128,0.1129,0.1131,0.1134,0.1134,0.1135,0.1135,0.1137,0.1138,0.1147,0.1158,0.1165,0.1166,0.1172,0.1174,0.1175,0.1177,0.1177,0.118,0.1183,0.1183,0.1184,0.1191,0.1191,0.1192,0.1192,0.1192,0.1193,0.1196,0.1197,0.1198,0.1201,0.1201,0.1201,0.1202,0.1203,0.1204,0.1204,0.1208,0.121,0.1211,0.1215,0.1218,0.1223,0.1226,0.1228,0.1229,0.1239,0.1243,0.1252,0.1255,0.1264,0.1265,0.1266,0.1268,0.1269,0.1275,0.1279,0.1279,0.1281,0.129,0.1295,0.1299,0.1304,0.1305,0.1307,0.1313,0.1319,0.1321,0.1325,0.1331,0.1337,0.1337,0.1341,0.1345,0.1349,0.1351,0.1355,0.1357,0.1367,0.1369,0.1373,0.1374,0.1385,0.1389,0.1389,0.1394,0.1395,0.1397,0.1402,0.1406,0.1414,0.142,0.143,0.1433,0.1436,0.1448,0.1451,0.1468,0.147,0.147,0.1476,0.1477,0.1498,0.15,0.1502,0.1509,0.1514,0.1514,0.152,0.1521,0.1523,0.1523,0.1542,0.1543,0.1544,0.1597,0.1607,0.1609,0.1612,0.1618,0.1621,0.1657,0.1667,0.1671,0.1674,0.1676,0.1683,0.1689,0.17,0.171,0.1712,0.1714,0.1714,0.1716,0.1719,0.1724,0.1733,0.1734,0.1737,0.1737,0.1739,0.1743,0.1752,0.1752,0.1753,0.1756,0.1756,0.1759,0.1761,0.1762,0.1764,0.1765,0.1771,0.1772,0.178,0.178,0.1783,0.1783,0.1784,0.1786,0.181,0.1818,0.1821,0.1821,0.1831,0.1836,0.184,0.1841,0.1841,0.1842,0.1855,0.1857,0.1858,0.1862,0.1864,0.1868,0.187,0.1876,0.1876,0.1883,0.1888,0.1898,0.1902,0.1902,0.1907,0.1933,0.1938,0.1941,0.1941,0.1946,0.195,0.1961,0.1971,0.1977,0.1982,0.1983,0.1985,0.1995,0.1997,0.2003,0.2006,0.2008,0.2009,0.2013,0.2021,0.2027,0.204,0.2041,0.2042,0.2048,0.2054,0.207,0.2081,0.2083,0.2089,0.2096,0.2099,0.2114,0.2118,0.2122,0.2129,0.2136,0.2152,0.2152,0.2153,0.2166,0.2167,0.2177,0.2178,0.218,0.2192,0.2217,0.2222,0.2226,0.2228,0.2275,0.2278,0.2279,0.2288,0.2293,0.2297,0.2295,0.2298,0.2302,0.2318,0.2334,0.2353,0.2362,0.24,0.2408,0.2416,0.242,0.2421,0.2421,0.2439,0.2447,0.2451,0.2469,0.2489,0.2525,0.2551,0.2553,0.2559,0.2564,0.2567,0.2567,0.2569,0.2584,0.2587,0.2587,0.2596,0.2623,0.263,0.2642,0.2644,0.2646,0.2672,0.2678,0.2701,0.2714,0.2739,0.2763,0.2775,0.2779,0.2791,0.2799,0.2811,0.2825,0.2827,0.2829,0.2837,0.2845,0.2855,0.2865,0.2874,0.2874,0.2881,0.29,0.2904,0.2919,0.2932,0.2949,0.2956,0.2972,0.298,0.3005,0.3007,0.3021,0.3021,0.3041,0.3043,0.3045,0.306,0.3074,0.3115,0.313,0.3135,0.314,0.3191,0.3227,0.3235,0.324,0.3331,0.3417,0.3439,0.3478,0.3484,0.3491,0.3525,0.3525,0.3528,0.3593,0.3613,0.362,0.3647,0.3653,0.3678,0.3689,0.3696,0.3734,0.3738,0.3774,0.3812,0.3888,0.39,0.3961,0.4039,0.4044,0.4044,0.4121,0.4152,0.4237,0.4247,0.4279,0.4386,0.4391,0.451,0.4521,0.4553,0.4624,0.4702,0.472,0.4796,0.4831,0.4898,0.5033,0.5046,0.5087,0.5114,0.5121,0.517,0.5322,0.5337,0.5345,0.536,0.5564,0.5588,0.5621,0.5646,0.5714,0.5725,0.576,0.5831,0.5858,0.5934,0.6035,0.6174,0.6277,0.6715,0.6865,0.7075,0.7102,0.7264,0.7278,0.7823,0.7857,0.8031,0.8176,0.8775,0.8878,0.8962,0.9167,0.9183,0.9183,0.9205,0.9224,0.9268,0.9326,0.9373,0.9367,0.9388,0.9417,0.9417,0.9406,0.9403,0.9423,0.9419,0.9437,0.9435,0.9431,0.949,0.9488,0.9512,0.9539,0.9599,0.9594,0.9591,0.9625,0.9653,0.9683,0.9675,0.9714,0.9714,0.971,0.9703,0.9698,0.9698,0.9726,0.981,0.9806,0.9849,0.9835,0.9833,0.9821,0.9817,0.9814,0.9873,0.9861,0.9854,0.9848,0.9837,0.9837,1,1,1,1],"threshold":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,1.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,2.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,3.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,4.0E-4,5.0E-4,5.0E-4,5.0E-4,5.0E-4,5.0E-4,5.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,6.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,7.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,8.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,9.0E-4,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.001,0.0011,0.0011,0.0011,0.0011,0.0011,0.0011,0.0011,0.0011,0.0011,0.0011,0.0012,0.0012,0.0012,0.0012,0.0012,0.0012,0.0012,0.0012,0.0012,0.0013,0.0013,0.0013,0.0013,0.0014,0.0014,0.0014,0.0014,0.0014,0.0014,0.0014,0.0014,0.0014,0.0015,0.0015,0.0015,0.0016,0.0016,0.0016,0.0016,0.0017,0.0017,0.0017,0.0017,0.0017,0.0017,0.0018,0.0018,0.0019,0.0019,0.0019,0.0019,0.0019,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.002,0.0021,0.0021,0.0021,0.0021,0.0022,0.0022,0.0023,0.0023,0.0024,0.0024,0.0024,0.0024,0.0025,0.0025,0.0025,0.0026,0.0026,0.0026,0.0026,0.0026,0.0027,0.0027,0.0027,0.0027,0.0027,0.0028,0.0028,0.0028,0.0028,0.0029,0.0029,0.003,0.003,0.003,0.0031,0.0031,0.0031,0.0033,0.0033,0.0033,0.0034,0.0034,0.0035,0.0035,0.0035,0.0035,0.0037,0.0038,0.0038,0.0039,0.0043,0.0046,0.0047,0.0049,0.0049,0.0049,0.005,0.005,0.0051,0.0054,0.0054,0.0055,0.0056,0.0056,0.0058,0.0058,0.0058,0.006,0.006,0.0061,0.0064,0.0069,0.0069,0.0073,0.0075,0.0075,0.0075,0.0079,0.0081,0.0086,0.0086,0.0088,0.0092,0.0093,0.0103,0.0104,0.0105,0.0112,0.0119,0.0121,0.0126,0.0129,0.0137,0.0153,0.0153,0.0156,0.0159,0.0159,0.0168,0.0187,0.019,0.0191,0.0193,0.0225,0.0228,0.023,0.0239,0.0246,0.0252,0.027,0.0282,0.0287,0.0305,0.0341,0.0382,0.0408,0.0642,0.0694,0.0818,0.0825,0.0939,0.0949,0.1561,0.1662,0.2035,0.2178,0.4561,0.4959,0.5102,0.7465,0.7708,0.7708,0.7727,0.7896,0.826,0.8882,0.9027,0.9128,0.9183,0.9193,0.9193,0.9317,0.9397,0.9551,0.9576,0.9651,0.9654,0.966,0.9682,0.9683,0.9715,0.9736,0.9779,0.9798,0.9817,0.9834,0.9871,0.9882,0.9888,0.989,0.989,0.9907,0.9913,0.9915,0.9915,0.9939,0.9949,0.9956,0.9958,0.9967,0.9968,0.9971,0.9972,0.9974,0.9975,0.998,0.9981,0.9983,0.9985,0.9985,0.9993,0.9993,0.9995,1]}},"id":"3T6HNIXPJNM77DL3HIAOH3BSU4","object":"metrics"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
    //By Jorge Moreira
    private static HTTPResponse mockGetGRToken(HTTPRequest req) {
		system.debug('mockGetGRToken');
        String jsonResponse = '{"token_type":"Bearer","access_token":"eyJhbGciOiJSUzUxMiIsImtpZCI6IjNDRjFBNTk1NjQ5MzdFQ0Q0NTE3NDI4QTU3NUU0NUM0OTJBNEFDRTkiLCJ0eXAiOiJKV1QifQ.eyJ1cG4iOiJhZG1pbiIsInVuaXF1ZV9uYW1lIjoiYWRtaW4iLCJlbWFpbCI6IiIsIm5iZiI6MTUzOTg4NDA2MiwiZXhwIjoxNTM5ODg3NjYyLCJpYXQiOjE1Mzk4ODQwNjIsImlzcyI6ImRlcGxveXIubWljcm9zb2Z0LmNvbSIsImF1ZCI6ImRlcGxveXIubWljcm9zb2Z0LmNvbSJ9.IhxLkBGf4J0nfqq_nBsXjZMLYoYjvSIaGSzmIMv8fqpiXNb5f_cDjtSmUGBAkyQX6pAd5ES82mCdFTHJqUqFEtxrt-LCp3L354qWm2s8F2ggz4HQMYYA5KHv-I2xmIsBfkNlAUTSusSBjszn2mp77EAraEXpOy4jw-TKEPpXPGgP9vsFlh2FgOSOOCdInOvvmWo0n0wDhX5rBeeTnY9EtpmO4PUhvw4cQDITdVlddvUnEYh-MhYtJljO8kqEk9njz3eS3aQGmNcPGs12p6xjnIaE3qn4gEpecsvnFLZnIJ5uWDMicld8GFo95zl7pbeK3q5yoMbbi0FvXxx229Fprg","expires_in":3600,"expires_on":1539887662,"refresh_token":"c7AkrokqVJDuaqpFbNtPOOMdfS2+MkwNa0nZu42JTjTYMLdWAIbHXEKfiD8iZbDo2zYoIAzEJaHO5dIFhyTod3K9k724ems7qYvcC2s7Agdxq6x/xAgQnL3JuwTpMzE5woZUPQoRBwAXh/OtoE4aOfEndA2Nfv6zL7G8Yjqabb+d22o/UMlOgFGjgnG/w1mtcjW5Lkb5HPpdWlOtiDgItMNWqqSrYjsZLCJH6iaTeqirfFOomzBpn/vVK73HE68MbKD9z3QVf5IJ1By3w1Jbny/Z8sRE5Z0zUtRiaAElAN5QjQO8z2NllQ4aSDF0l71vH6SZiXSXhXgaLMjvFrCazg=="}';
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }//By Jorge Moreira
    private static HTTPResponse mockGetGR(HTTPRequest req) {
		system.debug('mockGetGRToken');
        String jsonResponse = '{    "success": true,    "errorMessage": "",    "outputParameters": {        "nba_output": {            "udt_key_used": [                0            ],            "cluster_name": [                {                    "cluster": "mouse - usb - wireless - keyboard"                }            ],            "title_pred": [                {                    "lob_desc": "Latitude",                    "issue": "mouse - usb - wireless - keyboard",                    "input_text": "mouse falting",                    "top5": [                        [                            "Mouse Troubleshooting For Windows 7, 8 And 10",                            0.9963436                        ],                        [                            "Touchpad/Trackstick",                            0.0019801443                        ],                        [                            "Hard Drive Troubleshooting",                            0.0002521652                        ],                        [                            "Keyboard",                            0.000209128659                        ],                        [                            "Latitude No Post",                            0.000208021316                        ]                    ]                }            ],            "edit_flg": [                0            ],            "soft_pred": [                {                    "top5": [                        [                            "Perform Hard Reset",                            0.132138416                        ],                        [                            "Refer To Sales",                            0.09350334                        ],                        [                            "Follow Appropriate Local Policy Regarding Physical Damage",                            0.08238741                        ],                        [                            "Update Bios",                            0.0622570775                        ],                        [                            "Run Supportassist",                            0.04879651                        ]                    ]                }            ],            "next_best_action_link": [                [                    "[NA]"                ]            ],            "next_best_action": [                [                    "Dispatch Part: Mouse"                ]            ],            "hard_pred": [                {                    "cost": "low",                    "top5": [                        [                            "Mouse",                            0.998143                        ],                        [                            "Keyboard, Mouse",                            0.00142903288                        ],                        [                            "Chassis",                            0.000165743273                        ],                        [                            "Keyboard",                            0.00007520372                        ],                        [                            "Heatsink, Motherboard",                            0.00007046467                        ]                    ]                }            ],            "tag_info": [                {                    "lob_desc": "Latitude",                    "brand_desc": "LATITUDE 5450",                    "asst_id": "64SJH92",                    "fmly_desc": "HOUSTON14FCTO",                    "start_time_utc": "2018-10-18 19:19:45",                    "shipd_dt": "2016-01-04"                }            ],            "index": [                0            ]        }    },    "outputFiles": {},    "consoleOutput": "",    "changedFiles": []}';
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;
    }
    private static HTTPResponse mockGetGRBadResult(HTTPRequest req) {
        system.debug('mockPredictIntentBadResponse');
        String jsonResponse = '{"Link": null,"Message": "6bbbadd4-1ac8-4b2f-9fe2-ef05a11bced7","ExceptionType": null}';
        
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;
    }
    
    private static HTTPResponse mockGetGRUnauthorized(HTTPRequest req) {
		system.debug('mockGetGRError:');
        //String jsonResponse = '{}';
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        //res.setBody(jsonResponse);
        res.setStatusCode(401); //unauthorized
        return res;
    }
    
    private static HTTPResponse mockDeleteDataset(HTTPRequest req) {

        HttpResponse res = new HttpResponse();
        res.setStatusCode(204);
        return res;

    }

    private static HTTPResponse mockCreateLabel(HTTPRequest req) {

        String jsonResponse = '{"id":614,"datasetId":57,"name":"beach","object":"label"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetLabel(HTTPRequest req) {

        String jsonResponse = '{"id":614,"datasetId":57,"name":"beach","object":"label"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockCreateExample(HTTPRequest req) {

        String jsonResponse = '{"id":43887,"name":"77880132.jpg","location":"https://jBke4mtMuOjrCK3A04Q79O5TBySI2BC3zqi7...","createdAt":"2016-09-15T23:18:13.000+0000","label":{"id":614,"datasetId":57,"name":"beach","numExamples":50},"object":"example"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockCreateExamplesFromUrl(HTTPRequest req) {

        String jsonResponse = '{"id":1000022,"name":"mountainvsbeach","createdAt":"2017-02-17T00:22:10.000+0000","updatedAt":"2017-02-17T00:22:12.000+0000","labelSummary":{"labels":[{"id":1819,"datasetId":1000022,"name":"Mountains","numExamples":50},{"id":1820,"datasetId":1000022,"name":"Beaches","numExamples":49}]},"totalExamples":99,"totalLabels":2,"available":false,"object":"dataset"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetExample(HTTPRequest req) {

        System.debug('in mockGetExample');

        String jsonResponse = '{"id":43887,"name":"77880132.jpg","location":"https://jBke4mtMuOjrCK3A04Q79O5TBySI2BC3zqi7...","createdAt":"2016-09-15T23:18:13.000+0000","label":{"id":614,"datasetId":57,"name":"beach","numExamples":50},"object":"example"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetExamples(HTTPRequest req) {

        String jsonResponse = '{"object":"list","data":[{"id":43888,"name":"659803277.jpg","location":"https://K3A04Q79O5TBySIZSeMIj%2BC3zqi7rOmeK...","createdAt":"2016-09-16T17:14:38.000+0000","label":{"id":618,"datasetId":57,"name":"beach","numExamples":50},"object":"example"},{"id":43889,"name":"661860605.jpg","location":"https://jBke4mtMuOjrCK3A04Q79O5TBySI2BC3zqi7...","createdAt":"2016-09-16T17:14:42.000+0000","label":{"id":618,"datasetId":57,"name":"beach","numExamples":50},"object":"example"},{"id":43890,"name":"660548647.jpg","location":"https://HKzY79n47nd%2F0%2FCem6PJBkUoyxMWVssCX...","createdAt":"2016-09-16T17:15:25.000+0000","label":{"id":619,"datasetId":57,"name":"mountain","numExamples":49},"object":"example"},{"id":43891,"name":"578339672.jpg","location":"https://LRlXQeRyTVDiujSzHTabcJ2FGGnuGhAvedvu0D...","createdAt":"2016-09-16T17:15:29.000+0000","label":{"id":619,"datasetId":57,"name":"mountain","numExamples":49},"object":"example"}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockDeleteExample(HTTPRequest req) {

        HttpResponse res = new HttpResponse();
        res.setStatusCode(204);
        return res;

    }

    private static HTTPResponse mockTrainDataset(HTTPRequest req) {

        String jsonResponse = '{"datasetId":57,"datasetVersionId":0,"name":"Beach and Mountain Model","status":"QUEUED","progress":0,"createdAt":"2016-09-16T18:03:21.000+0000","updatedAt":"2016-09-16T18:03:21.000+0000","learningRate":0.001,"epochs":3,"queuePosition":1,"object":"training","modelId":"7JXCXTRXTMNLJCEF2DR5CJ46QU","trainParams":null,"trainStats":null,"modelType":"image"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockRetrainDataset(HTTPRequest req) {

        String jsonResponse = '{"datasetId":57,"datasetVersionId":0,"name":"Beach and Mountain Model","status":"QUEUED","progress":0,"createdAt":"2016-09-16T18:03:21.000+0000","updatedAt":"2016-09-16T18:03:21.000+0000","learningRate":0.001,"epochs":3,"queuePosition":1,"object":"training","modelId":"7JXCXTRXTMNLJCEF2DR5CJ46QU","trainParams":null,"trainStats":null,"modelType":"image"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetModel(HTTPRequest req) {

        String jsonResponse = '{"datasetId":57,"datasetVersionId":0,"name":"Beach and Mountain Model","status":"SUCCEEDED","progress":1,"createdAt":"2016-09-16T18:03:21.000+0000","updatedAt":"2016-09-16T18:03:21.000+0000","learningRate":0.001,"epochs":3,"object":"training","modelId":"7JXCXTRXTMNLJCEF2DR5CJ46QU","trainParams":null,"trainStats":null,"modelType":"image"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetModelLearningCurve(HTTPRequest req) {

        String jsonResponse = '{"object":"list","data":[{"epoch":1,"metricsData":{"f1":[0.75,0.8333333],"labels":["Mountains","Beaches"],"testAccuracy":0.8,"trainingLoss":0.2573,"confusionMatrix":[[3,2],[0,5]],"trainingAccuracy":0.8809},"epochResults":[{"exampleName":"601053842.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"578339672.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"549525751.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Beaches"},{"exampleName":"521811667.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Beaches"},{"exampleName":"479111308.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"155304150.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"566675649.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"175551857.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"459120189.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"109558771.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"}],"object":"learningcurve"},{"epoch":2,"metricsData":{"f1":[0.75,0.8333333],"labels":["Mountains","Beaches"],"testAccuracy":0.8,"trainingLoss":0.0531,"confusionMatrix":[[3,2],[0,5]],"trainingAccuracy":0.9824},"epochResults":[],"object":"learningcurve"},{"epoch":3,"metricsData":{"f1":[0.8,0.8],"labels":["Mountains","Beaches"],"testAccuracy":0.8,"trainingLoss":0.0278,"confusionMatrix":[[4,1],[1,4]],"trainingAccuracy":0.9893},"epochResults":[{"exampleName":"601053842.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"578339672.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"549525751.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"521811667.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Beaches"},{"exampleName":"479111308.jpg-Mountains","expectedLabel":"Mountains","predictedLabel":"Mountains"},{"exampleName":"155304150.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"566675649.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"175551857.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"459120189.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Beaches"},{"exampleName":"109558771.jpg-Beaches","expectedLabel":"Beaches","predictedLabel":"Mountains"}],"object":"learningcurve"}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetModelMetrics(HTTPRequest req) {

        String jsonResponse = '{"metricsData":{"f1":[0.9090909090909092,0.9411764705882352],"labels":["beach","mountain"],"testAccuracy":0.9286,"trainingLoss":0.021,"confusionMatrix":[[5,0],[1,8]],"trainingAccuracy":0.9941},"createdAt":"2016-09-16T18:04:59.000+0000","id":"7JXCXTRXTMNLJCEF2DR5CJ46QU","object":"metrics"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetModels(HTTPRequest req) {

        String jsonResponse = '{"object":"list","data":[{"datasetId":57,"datasetVersionId":0,"name":"Beach Mountain Model - Test1","status":"FAILED","progress":0,"createdAt":"2016-09-15T15:31:23.000+0000","updatedAt":"2016-09-15T15:32:53.000+0000","failureMsg":"To train a dataset and create a model, the dataset must contain at least 100 examples per label for test set","object":"model","modelId":"2KXJEOM3N562JBT4P7OX7VID2Q","modelType":"image"},{"datasetId":57,"datasetVersionId":0,"name":"Beach Mountain Model - Test2","status":"SUCCEEDED","progress":1,"createdAt":"2016-09-15T16:15:46.000+0000","updatedAt":"2016-09-15T16:17:19.000+0000","object":"model","modelId":"YCQ4ZACEPJFGXZNRA6ERF3GL5E","modelType":"image"}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockPredictFeedbackImage(HTTPRequest req) {

        String jsonResponse = '{"id":618168,"name":"alps.jpg","location":"https://HnpTxmdFb6%2BY1jwAqBtjkUMUj6qKQD0CTjsJ...","createdAt":"2017-05-04T20:52:02.000+0000","label":{"id":3235,"datasetId":1000475,"name":"Mountains","numExamples":104},"object":"example"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockPredictFeedbackLanguage(HTTPRequest req) {

 		String jsonResponse = '{"id":1048038,"name":"text-intent","location":"is it snowing in Denver","createdAt":"2017-06-09T21:23:11.000+0000","label":{"id":16611,"datasetId":1001511,"name":"current-weather","numExamples":32},"object":"example"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
    //by Jorge Moreira
    private static HTTPResponse mockEinsteinJWTBearerFlow(HTTPRequest req) {

 		String jsonResponse = '{"access_token":"EN4727J5K5O63H5MB5QMO46MXIG46RDWUNUSUZTCFWPE4SHCL7KDYVWH7J7R7CCKTBBBADT6IPBZPL3RQM5X7FHT3AATPJR7KATU2CY","token_type":"Bearer","expires_in":"301"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockPredictBase64(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"beach","probability":0.96021104},{"label":"mountain","probability":0.039788953959941864}],"object":"predictresponse"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockDetectBase64(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"box","probability":0.96021104, "boundingBox": {"maxX":100, "maxY":100, "minX":100, "minY":100}}],"object":"predictresponse"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
	//by Shaurya Bajaj
    private static HTTPResponse mockPredictIntent(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"Mouse","probability":0.9917755},{"label":"USB","probability":0.0035287717},{"label":"Slow shutdown","probability":0.0024557777},{"label":"Touchpad","probability":4.2926372E-4},{"label":"Slow boot time","probability":3.1050152E-4}],"object":"predictresponse"}';
        
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;
    }
    
    // >> by Jorge Montalvao 12/20/2018 
    private static HTTPResponse mockPredictIntentLower40(HTTPRequest req) {
        system.debug('mockPredictIntentLower40');
        String jsonResponse = '{"probabilities":[{"label":"Mouse","probability":0.0099177},{"label":"USB","probability":0.00035287717},{"label":"Slow shutdown","probability":0.00024557777}],"object":"predictresponse"}';
        
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;
    }

    private static HTTPResponse mockPredictIntentBadDocument(HTTPRequest req) {
        system.debug('mockPredictIntentBadDocument');
        String jsonResponse = '{"message":"The \'document\' parameter is required."}';
        
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;
    }
    // << by Jorge Montalvao 12/20/2018

    private static HTTPResponse mockPredictSentiment(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"positive","probability":0.77945083},{"label":"negative","probability":0.18806243},{"label":"neutral","probability":0.032486767}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockPredictBlob(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"beach","probability":0.98093873},{"label":"mountain","probability":0.019061258}],"object":"predictresponse"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockPredictUrl(HTTPRequest req) {

        String jsonResponse = '{"probabilities":[{"label":"beach","probability":0.9997346},{"label":"mountain","probability":2.6542565E-4}],"object":"predictresponse"}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

    private static HTTPResponse mockGetApiUsage(HTTPRequest req) {

        String jsonResponse = '{"TestAMissingProperty": "Some Value","object":"list","data":[{"id":"489","organizationId":"108","startsAt":"2017-03-01T00:00:00.000Z","endsAt":"2017-04-01T00:00:00.000Z","planData":[{"plan":"FREE","amount":1,"source":"HEROKU"}],"licenseId":"kJCHtYDCSf","object":"apiusage","predictionsRemaining":997,"predictionsUsed":3,"predictionsMax":1000}]}';

        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }
    private static HTTPResponse mocktoken(HTTPRequest req) {

        String jsonResponse = 'saafdsgfda';
        HttpResponse res = new HttpResponse();
        res.setHeader('Content-Type', 'application/json');
        res.setBody(jsonResponse);
        res.setStatusCode(200);
        return res;

    }

}